services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - ecommerce
  
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ecommerce


  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - 8090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181


  ims-db:
    image: postgres:alpine
    container_name: ims-db
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_PASSWORD: mysecretpassword
    restart: always
    ports:
      - "5432:5432"
    networks:
      - ecommerce
    volumes:
      - ims-db-volume:/var/lib/postgresql/data

  auth-db:
    image: postgres:alpine
    container_name: auth-db
    environment:
      POSTGRES_DB: "_auth"
      POSTGRES_PASSWORD: mysecretpassword
    restart: always
    ports:
      - '5433:5432'
    networks:
      - ecommerce
    volumes:
      - auth-db-volume:/var/lib/postgresql/data

  carts-db:
    image: postgres:alpine
    container_name: carts-db
    environment:
      POSTGRES_DB: "_carts"
      POSTGRES_PASSWORD: mysecretpassword
    restart: always
    ports:
      - '5434:5432'
    networks:
      - ecommerce
    volumes:
      - carts-db-volume:/var/lib/postgresql/data

  orders-db:
    image: postgres:alpine
    container_name: orders-db
    environment:
      POSTGRES_DB: "_orders"
      POSTGRES_PASSWORD: mysecretpassword
    restart: always
    ports:
      - "5435:5432"
    networks:
      - ecommerce
    volumes:
      - orders-db-volume:/var/lib/postgresql/data

  ims-app:
    image: olymahmudmugdho/inventory-management-system
    container_name: ims-app
    ports:
      - "8081:8081"
    environment:
      - BOOTSTRAP_SERVER="kafka:29092"
    depends_on:
      - ims-db
      - kafka
      - zookeeper
    networks:
      - ecommerce

  auth-app:
    image: olymahmudmugdho/ecommerce-auth-microservice
    container_name: auth-app
    ports:
      - "8082:8082"
    depends_on:
      - auth-db
    networks:
      - ecommerce

  cart-app:
    image: olymahmudmugdho/ecommerce-cart-microservice
    container_name: cart-app
    environment:
      DATABASE_URL: "postgresql://postgres:mysecretpassword@carts-db/_carts"
    ports:
      - "8083:8083"
    depends_on:
      - carts-db
    networks:
      - ecommerce

  orders-app:
    image: olymahmudmugdho/ecommerce-order-microservice
    container_name: order-app
    restart: always
    ports:
      - "8084:8084"
    depends_on:
      - kafka
      - zookeeper
    networks:
      - ecommerce

  api-gateway:
    image: olymahmudmugdho/ecommerce-api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - auth-app
      - cart-app
    networks:
      - ecommerce

networks:
  ecommerce:
    name: ecommerce

volumes:
  ims-db-volume:
  auth-db-volume:
  carts-db-volume:
  orders-db-volume:
